<?php

namespace gamboamartin\facturacion\models;

use base\orm\_modelo_parent;
use gamboamartin\errores\errores;
use stdClass;


class _p extends _modelo_parent{

    protected _modelo_parent $modelo_dr_part;
    protected _modelo_parent $modelo_p_part;


    public function alta_bd(array $keys_integra_ds = array('descripcion')): array|stdClass
    {

        $keys = array('fc_impuesto_p_id');
        $valida = $this->validacion->valida_ids(keys: $keys,registro:  $this->registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar registro',data:  $valida);
        }

        if(!isset($this->registro['codigo'])){
            $codigo = $this->registro['fc_impuesto_p_id'];
            $codigo .= time();
            $codigo .= mt_rand(1000,9999);
            $this->registro['codigo'] = $codigo;
        }

        if(!isset($this->registro['descripcion'])){
            $descripcion = $this->registro['codigo'];
            $this->registro['descripcion'] = $descripcion;
        }

        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar',data:  $r_alta_bd);
        }

        $key_base_dr = $this->modelo_dr_part->tabla.'.base_dr';
        $key_importe_dr = $this->modelo_dr_part->tabla.'.importe_dr';

        $filtro['fc_pago_pago.id'] = $r_alta_bd->registro['fc_pago_pago_id'];
        $campos['base_dr_sum'] = $key_base_dr;
        $campos['importe_dr_sum'] = $key_importe_dr;

        $fc_impuesto_dr_part = $this->modelo_dr_part->suma(campos: $campos, filtro: $filtro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener fc_impuesto_dr_part',data:  $fc_impuesto_dr_part);
        }

        $cat_sat_tipo_impuesto_id = 2;
        $cat_sat_tipo_factor_id = 5;
        $cat_sat_factor_id = 11;
        if($this->tabla === 'fc_retencion_p'){
            $cat_sat_tipo_impuesto_id = 1;
            $cat_sat_factor_id = 27;

        }

        $fc_impuesto_p_part_ins[$this->key_id] = $r_alta_bd->registro_id;
        $fc_impuesto_p_part_ins['base_p'] = $fc_impuesto_dr_part['base_dr_sum'];
        $fc_impuesto_p_part_ins['importe_p'] = $fc_impuesto_dr_part['importe_dr_sum'];
        $fc_impuesto_p_part_ins['cat_sat_tipo_impuesto_id'] = $cat_sat_tipo_impuesto_id;
        $fc_impuesto_p_part_ins['cat_sat_tipo_factor_id'] = $cat_sat_tipo_factor_id;
        $fc_impuesto_p_part_ins['cat_sat_factor_id'] = $cat_sat_factor_id;

        $r_alta_fc_impuesto_p_part = $this->modelo_p_part->alta_registro(registro: $fc_impuesto_p_part_ins);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar fc_traslado_dr_part',data:  $r_alta_fc_impuesto_p_part);
        }


        return $r_alta_bd;
    }

    public function elimina_bd(int $id): array|stdClass
    {
        $filtro[$this->key_filtro_id] = $id;
        $del = $this->modelo_p_part->elimina_con_filtro_and(filtro: $filtro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al eliminar del',data:  $del);
        }
        $r_del = parent::elimina_bd(id: $id); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al eliminar del',data:  $r_del);
        }
        return $r_del;

    }

    public function modifica_bd(array $registro, int $id, bool $reactiva = false,
                                array $keys_integra_ds = array('codigo', 'descripcion')): array|stdClass
    {

        $registro_previo = $this->registro(registro_id: $id);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener registro_previo',data:  $registro_previo);
        }


        if(!isset($registro['descripcion'])){
            $key_codigo = $this->tabla.'_codigo';
            $codigo = $registro_previo[$key_codigo];
            if(isset($registro['codigo'])){
                $codigo = $registro['codigo'];
            }

            $descripcion = $codigo;
            $registro['descripcion'] = $descripcion;
        }
        $r_modifica_bd  = parent::modifica_bd(registro: $registro,id:  $id,reactiva:  $reactiva,
            keys_integra_ds:  $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al modificar',data:  $r_modifica_bd);
        }
        return $r_modifica_bd;
    }

}
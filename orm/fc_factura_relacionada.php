<?php

namespace gamboamartin\facturacion\models;

use base\orm\_modelo_parent_sin_codigo;
use gamboamartin\errores\errores;
use PDO;
use stdClass;


class fc_factura_relacionada extends _modelo_parent_sin_codigo
{
    public function __construct(PDO $link)
    {
        $tabla = 'fc_factura_relacionada';
        $columnas = array($tabla => false, 'fc_factura' => $tabla, 'fc_relacion' => $tabla,'cat_sat_tipo_relacion'=>'fc_relacion');
        $campos_obligatorios = array('fc_factura_id', 'fc_relacion_id');

        $columnas_extra = array();

        $fc_factura_uuid = "(SELECT IFNULL(fc_cfdi_sellado.uuid,'') 
            FROM fc_cfdi_sellado WHERE fc_cfdi_sellado.fc_factura_id = fc_factura.id)";
        $columnas_extra['fc_factura_uuid'] = "IFNULL($fc_factura_uuid,'SIN UUID')";


        parent::__construct(link: $link, tabla: $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas,  columnas_extra: $columnas_extra);

        $this->NAMESPACE = __NAMESPACE__;

        $this->etiqueta = 'Factura Relacionada';
    }

    public function alta_bd(array $keys_integra_ds = array('descripcion','fc_relacion_id','fc_factura_id')): array|stdClass
    {
        $fc_relacion = (new fc_relacion(link: $this->link))->registro(registro_id: $this->registro['fc_relacion_id'], retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener fc_relacion',data:  $fc_relacion);
        }
        $fc_factura = (new fc_factura(link: $this->link))->registro(registro_id: $this->registro['fc_factura_id'], retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener fc_factura',data:  $fc_factura);
        }

        if(!isset($this->registro['descripcion'])){
            $descripcion = $fc_relacion->cat_sat_tipo_relacion_id.' '.$fc_factura->fc_factura_uuid.' '.
                $fc_factura->fc_factura_folio.' '.$fc_factura->fc_factura_fecha;

            $this->registro['descripcion'] = $descripcion;
        }

        $r_alta_bd = parent::alta_bd(keys_integra_ds: $keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar',data:  $r_alta_bd);
        }
        return $r_alta_bd;
    }




}
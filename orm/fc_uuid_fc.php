<?php
namespace gamboamartin\facturacion\models;
use base\orm\_modelo_parent;
use gamboamartin\errores\errores;
use PDO;
use stdClass;


class fc_uuid_fc extends _modelo_parent {
    public function __construct(PDO $link){
        $tabla = 'fc_uuid_fc';
        $columnas = array($tabla=>false,'fc_uuid'=>$tabla,'fc_relacion'=>$tabla,
            'cat_sat_tipo_relacion'=>'fc_relacion','cat_sat_tipo_de_comprobante'=>'fc_uuid',
            'com_sucursal'=>'fc_uuid','com_cliente'=>'com_sucursal','fc_csd'=>'fc_uuid','org_sucursal'=>'fc_csd',
            'org_empresa'=>'org_sucursal');

        $no_duplicados = array();

        $campos_obligatorios = array('fc_uuid_id','fc_relacion_id');

        $fc_uuid_etapa = "(SELECT pr_etapa.descripcion FROM pr_etapa 
            LEFT JOIN pr_etapa_proceso ON pr_etapa_proceso.pr_etapa_id = pr_etapa.id 
            LEFT JOIN fc_uuid_etapa ON fc_uuid_etapa.pr_etapa_proceso_id = pr_etapa_proceso.id
            WHERE fc_uuid_etapa.fc_uuid_id = fc_uuid.id ORDER BY fc_uuid_etapa.id DESC LIMIT 1)";

        $columnas_extra['fc_uuid_etapa'] = "$fc_uuid_etapa";


        $campos_view = array();


        parent::__construct(link: $link, tabla: $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas, campos_view: $campos_view, columnas_extra: $columnas_extra,
            no_duplicados: $no_duplicados, tipo_campos: array());

        $this->NAMESPACE = __NAMESPACE__;

        $this->etiqueta = 'UUID Externos Relacionados';


    }

    public function alta_bd(array $keys_integra_ds = array('codigo', 'descripcion')): array|stdClass
    {
        $fc_uuid = (new fc_uuid(link: $this->link))->registro(registro_id: $this->registro['fc_uuid_id'], retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener fc_uuid',data:  $fc_uuid);
        }
        $fc_relacion = (new fc_relacion(link: $this->link))->registro(registro_id: $this->registro['fc_relacion_id'], retorno_obj: true);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al obtener fc_uuid',data:  $fc_relacion);
        }

        if(!isset($this->registro['descripcion'])){

            $descripcion = $fc_uuid->fc_uuid_descripcion;
            $descripcion .= ' '.$fc_relacion->fc_relacion_descripcion;
            $this->registro['descripcion'] = $descripcion;
        }

        $r_alta_bd = parent::alta_bd($keys_integra_ds); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al insertar',data:  $r_alta_bd);
        }
        return $r_alta_bd;
    }


}
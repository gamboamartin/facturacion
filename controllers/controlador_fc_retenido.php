<?php
/**
 * @author Martin Gamboa Vazquez
 * @version 1.0.0
 * @created 2022-05-14
 * @final En proceso
 *
 */
namespace gamboamartin\facturacion\controllers;

use gamboamartin\errores\errores;
use gamboamartin\facturacion\models\fc_retenido;
use gamboamartin\system\links_menu;
use gamboamartin\system\system;

use gamboamartin\template\html;
use html\fc_retenido_html;
use PDO;
use stdClass;

class controlador_fc_retenido extends system{

    public array $keys_selects = array();

    public function __construct(PDO $link, html $html = new \gamboamartin\template_1\html(),
                                stdClass $paths_conf = new stdClass()){
        $modelo = new fc_retenido(link: $link);
        $html_ = new fc_retenido_html(html: $html);
        $obj_link = new links_menu($this->registro_id);

        $columns["fc_retenido_id"]["titulo"] = "Id";
        $columns["fc_retenido_codigo"]["titulo"] = "Codigo";
        $columns["fc_retenido_descripcion"]["titulo"] = "Descripcion";
        $columns["fc_partida_descripcion"]["titulo"] = "Partida";
        $columns["cat_sat_tipo_impuesto_descripcion"]["titulo"] = "Tipo Impuesto";

        $filtro = array("fc_retenido.id","fc_retenido.codigo","fc_retenido.descripcion","fc_partida.descripcion",
            "cat_sat_tipo_impuesto.descripcion");

        $datatables = new stdClass();
        $datatables->columns = $columns;
        $datatables->filtro = $filtro;

        parent::__construct(html:$html_, link: $link,modelo:  $modelo, obj_link: $obj_link, datatables: $datatables,
            paths_conf: $paths_conf);

        $this->titulo_lista = 'Retenido';

        $this->asignar_propiedad(identificador:'fc_partida_id', propiedades: ["label" => "Partida"]);
        $this->asignar_propiedad(identificador:'cat_sat_tipo_factor_id', propiedades: ["label" => "Tipo Factor"]);
        $this->asignar_propiedad(identificador:'cat_sat_factor_id', propiedades: ["label" => "Factor"]);
        $this->asignar_propiedad(identificador:'cat_sat_tipo_impuesto_id', propiedades: ["label" => "Tipo Impuesto"]);
        $this->asignar_propiedad(identificador: 'codigo', propiedades: ['place_holder'=> 'Codigo']);
        $this->asignar_propiedad(identificador: 'codigo_bis', propiedades: ['place_holder'=> 'Codigo BIS']);
    }

    public function alta(bool $header, bool $ws = false): array|string
    {
        $r_alta =  parent::alta(header: false, ws: false); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar template',data:  $r_alta, header: $header,ws:$ws);
        }

        $inputs = $this->genera_inputs(keys_selects:  $this->keys_selects);
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al generar inputs',data:  $inputs);
            print_r($error);
            die('Error');
        }

        return $r_alta;
    }

    public function asignar_propiedad(string $identificador, mixed $propiedades)
    {
        if (!array_key_exists($identificador,$this->keys_selects)){
            $this->keys_selects[$identificador] = new stdClass();
        }

        foreach ($propiedades as $key => $value){
            $this->keys_selects[$identificador]->$key = $value;
        }
    }

    private function base(): array|stdClass
    {
        $r_modifica =  parent::modifica(header: false,aplica_form:  false);
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al generar template',data:  $r_modifica);
        }

        $this->asignar_propiedad(identificador:'fc_partida_id',
            propiedades: ["id_selected"=>$this->row_upd->fc_partida_id]);
        $this->asignar_propiedad(identificador:'cat_sat_tipo_factor_id',
            propiedades: ["id_selected"=>$this->row_upd->cat_sat_tipo_factor_id]);
        $this->asignar_propiedad(identificador:'cat_sat_factor_id',
            propiedades: ["id_selected"=>$this->row_upd->cat_sat_factor_id]);
        $this->asignar_propiedad(identificador:'cat_sat_tipo_impuesto_id',
            propiedades: ["id_selected"=>$this->row_upd->cat_sat_tipo_impuesto_id]);

        $inputs = $this->genera_inputs(keys_selects:  $this->keys_selects);
        if(errores::$error){
            return $this->errores->error(mensaje: 'Error al inicializar inputs',data:  $inputs);
        }

        $data = new stdClass();
        $data->template = $r_modifica;
        $data->inputs = $inputs;

        return $data;
    }

    public function modifica(bool $header, bool $ws = false, string $breadcrumbs = '', bool $aplica_form = true,
                             bool $muestra_btn = true): array|string
    {
        $base = $this->base();
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al maquetar datos',data:  $base,
                header: $header,ws:$ws);
        }

        return $base->template;
    }

}

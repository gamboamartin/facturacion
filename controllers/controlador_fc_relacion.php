<?php
/**
 * @author Martin Gamboa Vazquez
 * @version 1.0.0
 * @created 2022-05-14
 * @final En proceso
 *
 */
namespace gamboamartin\facturacion\controllers;

use base\controller\controler;
use gamboamartin\errores\errores;
use gamboamartin\facturacion\html\fc_factura_html;
use gamboamartin\facturacion\html\fc_relacion_html;
use gamboamartin\facturacion\models\fc_conf_etapa_rel;
use gamboamartin\facturacion\models\fc_factura;
use gamboamartin\facturacion\models\fc_relacion;
use gamboamartin\system\_ctl_base;
use gamboamartin\system\links_menu;

use gamboamartin\template\html;
use html\cat_sat_tipo_relacion_html;
use PDO;
use stdClass;

class controlador_fc_relacion extends _ctl_base{


    public function __construct(PDO      $link, html $html = new \gamboamartin\template_1\html(),
                                stdClass $paths_conf = new stdClass())
    {
        $modelo = new fc_relacion(link: $link);
        $html_ = new fc_relacion_html(html: $html);
        $obj_link = new links_menu(link: $link, registro_id: $this->registro_id);

        $datatables = $this->init_datatable();
        if (errores::$error) {
            $error = $this->errores->error(mensaje: 'Error al inicializar datatable', data: $datatables);
            print_r($error);
            die('Error');
        }

        parent::__construct(html: $html_, link: $link, modelo: $modelo, obj_link: $obj_link, datatables: $datatables,
            paths_conf: $paths_conf);

        $configuraciones = $this->init_configuraciones();
        if (errores::$error) {
            $error = $this->errores->error(mensaje: 'Error al inicializar configuraciones', data: $configuraciones);
            print_r($error);
            die('Error');
        }


    }

    public function alta(bool $header, bool $ws = false): array|string
    {
        $r_alta = parent::alta($header, $ws); // TODO: Change the autogenerated stub
        if (errores::$error) {
            $error = $this->errores->error(mensaje: 'Error al generar template', data: $r_alta);
            print_r($error);
            die('Error');
        }

        $fc_configuraciones_etapa_rel = (new fc_conf_etapa_rel(link: $this->link))->registros_activos();
        if(errores::$error){
            $error = $this->errores->error(mensaje: 'Error al obtener fc_conf_etapa_rel', data: $fc_configuraciones_etapa_rel);
            print_r($error);
            die('Error');
        }

        $in = array();
        $in['llave'] = 'fc_factura_etapa';
        foreach ($fc_configuraciones_etapa_rel as $fc_configuracion_etapa_rel){
            $in['values'][] = $fc_configuracion_etapa_rel['pr_etapa_descripcion'];
        }

        $r_fc_factura = (new fc_factura(link: $this->link))->filtro_and(in: $in);
        if (errores::$error) {
            $error = $this->errores->error(mensaje: 'Error al obtener facturas', data: $r_fc_factura);
            print_r($error);
            die('Error');
        }

        $facturas = $r_fc_factura->registros;

        $fc_factura_id = (new fc_factura_html(html: $this->html_base))->select_fc_factura_id(cols: 12,
            con_registros: true, id_selected: -1, link: $this->link, registros: $facturas);
        if (errores::$error) {
            $error = $this->errores->error(mensaje: 'Error al generar input', data: $fc_factura_id);
            print_r($error);
            die('Error');
        }

        $cat_sat_tipo_relacion_id = (new cat_sat_tipo_relacion_html(html: $this->html_base))->select_cat_sat_tipo_relacion_id(cols: 12,
            con_registros: true, id_selected: -1, link: $this->link);
        if (errores::$error) {
            $error = $this->errores->error(mensaje: 'Error al generar input', data: $cat_sat_tipo_relacion_id);
            print_r($error);
            die('Error');
        }

        $this->inputs = new stdClass();
        $this->inputs->fc_factura_id = $fc_factura_id;
        $this->inputs->cat_sat_tipo_relacion_id = $cat_sat_tipo_relacion_id;


        return $r_alta;

    }


    private function init_configuraciones(): controler
    {
        $this->seccion_titulo = 'Relaciones';
        $this->titulo_lista = 'Registro de Relaciones';

        return $this;
    }



    private function init_datatable(): stdClass
    {
        $columns["fc_factura_id"]["titulo"] = "Id";
        $columns["fc_factura_folio"]["titulo"] = "Folio";
        $columns["cat_sat_tipo_relacion_descripcion"]["titulo"] = "Tipo Relacion";

        $filtro = array("fc_factura.id","fc_factura.folio","cat_sat_tipo_relacion.descripcion");

        $datatables = new stdClass();
        $datatables->columns = $columns;
        $datatables->filtro = $filtro;

        return $datatables;
    }


}

<?php
/**
 * @author Martin Gamboa Vazquez
 * @version 1.0.0
 * @created 2022-05-14
 * @final En proceso
 *
 */
namespace gamboamartin\facturacion\controllers;

use gamboamartin\errores\errores;
use gamboamartin\facturacion\html\fc_uuid_html;
use gamboamartin\facturacion\models\fc_uuid;
use gamboamartin\organigrama\html\org_sucursal_html;
use gamboamartin\system\_ctl_parent_sin_codigo;
use gamboamartin\system\links_menu;
use gamboamartin\template\html;
use html\cat_sat_tipo_de_comprobante_html;
use html\com_sucursal_html;
use PDO;
use stdClass;


class controlador_fc_uuid extends _ctl_parent_sin_codigo {


    public function __construct(PDO $link, html $html = new \gamboamartin\template_1\html(), stdClass $paths_conf = new stdClass()){
        $modelo = new fc_uuid(link: $link);

        $html_ = new fc_uuid_html(html: $html);
        $obj_link = new links_menu(link: $link, registro_id: $this->registro_id);

        $datatables = new stdClass();
        $datatables->columns = array();
        $datatables->columns['cat_sat_tipo_de_comprobante_descripcion']['titulo'] = 'Tipo de comprobante';
        $datatables->columns['fc_uuid_id']['titulo'] = 'Id';
        $datatables->columns['fc_uuid_uuid']['titulo'] = 'UUID';
        $datatables->columns['com_cliente_rfc']['titulo'] = 'Cliente';
        $datatables->columns['org_empresa_rfc']['titulo'] = 'Empresa';
        $datatables->columns['fc_uuid_fecha']['titulo'] = 'Fecha';
        $datatables->columns['fc_uuid_folio']['titulo'] = 'Folio';

        $datatables->filtro = array();
        $datatables->filtro[] = 'cat_sat_tipo_de_comprobante.descripcion';
        $datatables->filtro[] = 'fc_uuid.id';
        $datatables->filtro[] = 'fc_uuid.uuid';
        $datatables->filtro[] = 'com_cliente.rfc';
        $datatables->filtro[] = 'org_empresa.rfc';
        $datatables->filtro[] = 'fc_uuid.fecha';
        $datatables->filtro[] = 'fc_uuid.folio';

        parent::__construct(html: $html_, link: $link, modelo: $modelo, obj_link: $obj_link, datatables: $datatables,
            paths_conf: $paths_conf);

        $this->titulo_lista = 'Folio Externos';


    }

    public function alta(bool $header, bool $ws = false): array|string
    {

        $r_alta_bd = parent::alta($header, $ws); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar template',data:  $r_alta_bd, header: $header,ws:  $ws);
        }

        $org_sucursal_id = (new org_sucursal_html(html: $this->html_base))->select_org_sucursal_id(cols: 12,
            con_registros:  true,id_selected:  -1,link:  $this->link);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->org_sucursal_id = $org_sucursal_id;

        $com_sucursal_id = (new com_sucursal_html(html: $this->html_base))->select_com_sucursal_id(cols: 12,
            con_registros: true, id_selected: -1, link: $this->link, disabled: false, label: 'Cliente');

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->com_sucursal_id = $com_sucursal_id;


        $cat_sat_tipo_de_comprobante_id =
            (new cat_sat_tipo_de_comprobante_html(html: $this->html_base))->select_cat_sat_tipo_de_comprobante_id(
                cols: 12, con_registros: true, id_selected: -1, link: $this->link);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->cat_sat_tipo_de_comprobante_id = $cat_sat_tipo_de_comprobante_id;

        $uuid = (new fc_uuid_html(html: $this->html_base))->input_uuid(cols: 12, row_upd: new stdClass(),
                value_vacio: false);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->uuid = $uuid;

        $fecha = (new fc_uuid_html(html: $this->html_base))->input_fecha(cols: 6, row_upd: new stdClass(),
                value_vacio: false, value_hora: true);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->fecha = $fecha;

        $folio =
            (new fc_uuid_html(html: $this->html_base))->input_folio(cols: 6, row_upd: new stdClass(),
                value_vacio: false);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->folio = $folio;

        return $r_alta_bd;
    }

    public function modifica(bool $header, bool $ws = false, array $keys_selects = array()): array|stdClass
    {
        $r_modifica = parent::modifica($header, $ws, $keys_selects); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar template',data:  $r_modifica, header: $header,ws:  $ws);
        }

        $org_sucursal_id = (new org_sucursal_html(html: $this->html_base))->select_org_sucursal_id(cols: 12,
            con_registros:  true,id_selected:  $this->row_upd->org_sucursal_id,link:  $this->link);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->org_sucursal_id = $org_sucursal_id;

        $com_sucursal_id = (new com_sucursal_html(html: $this->html_base))->select_com_sucursal_id(cols: 12,
            con_registros: true, id_selected: $this->row_upd->com_sucursal_id, link: $this->link, disabled: false, label: 'Cliente');

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->com_sucursal_id = $com_sucursal_id;


        $cat_sat_tipo_de_comprobante_id =
            (new cat_sat_tipo_de_comprobante_html(html: $this->html_base))->select_cat_sat_tipo_de_comprobante_id(
                cols: 12, con_registros: true, id_selected: $this->row_upd->cat_sat_tipo_de_comprobante_id, link: $this->link);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->cat_sat_tipo_de_comprobante_id = $cat_sat_tipo_de_comprobante_id;

        $uuid = (new fc_uuid_html(html: $this->html_base))->input_uuid(cols: 12, row_upd: $this->row_upd,
            value_vacio: false);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->uuid = $uuid;


        $fecha = (new fc_uuid_html(html: $this->html_base))->input_fecha(cols: 6, row_upd: $this->row_upd,
            value_vacio: false, value: $this->row_upd->fecha, value_hora: true);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->fecha = $fecha;

        $folio =
            (new fc_uuid_html(html: $this->html_base))->input_folio(cols: 6, row_upd:  $this->row_upd,
                value_vacio: false);

        if(errores::$error){
            return $this->retorno_error(mensaje: 'Error al generar input',data:  $org_sucursal_id, header: $header,ws:  $ws);
        }

        $this->inputs->folio = $folio;

        return $r_modifica;

    }


}
